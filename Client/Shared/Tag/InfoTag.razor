@inject ITagService TagService
@inject ICategoryService CategoryService



<div class="continer-fluid mt-5">
    <div class="row">
        <div class="col-12">
            <h4>Information</h4>
            <EditForm Model="Tag">
                <div class="form-group">
                    <label>Nom</label>
                    <label class="form-control">@Tag.TAG_name</label>
                </div>
                <div class="form-group">
                    <label>Categorie</label>
                      <label class="form-control">@Tag.Categories.CTG_name</label>
                </div>
                <div class="form-group">
                    <label>Couleur</label>
                      <label class="form-control" style="background-color:@Tag.Categories.CTG_color; color:white;">@Tag.Categories.CTG_color</label>
                </div>

            </EditForm>
        </div>
    </div>
</div>





@code {

    [Parameter]
    public TagDto Tag { get; set; } = new TagDto();
    public List<CategoryDto> Categories { get; set; } = new List<CategoryDto>();

    protected override async Task OnParametersSetAsync()
    {
        if (Tag.TAG_id != 0)
        {
            await TagService.GetEntity(Tag.TAG_id);
        }
        if(Tag.Categories == null)
        {
            Tag = new TagDto()
            {
                TAG_id = 0,
                TAG_name = "",
                CTG_id = 0,
                Categories = new CategoryDto()
            };
        }
    }

}
