@page "/feed"
@inject IPublicationService PublicationService
@inject NavigationManager NavigationManager
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h3>Feed</h3>
        </div>
        <div class="col-12" style="height: 85vh; overflow-y: auto;">

            @if (PublicationService.Entities.Count == 0)
            {
                <p><em>Aucune publication</em></p>
            }
            else
            {
            <div class="row">

                @foreach (var question in PublicationService.Entities)
                {


                    @if (whatType == "question" && question.TypId == 1)
                    {

                        <QuestionLayout Question="question" />
                    }
                    else if (whatType == "biblio" && question.TypId == 3)
                    {
                        <BiblioLayout Biblio="question" isOnBiblio="true"/>
                    }
                    else if(whatType == "")
                    {
                        switch (question.TypId)
                        {
                            case 1:
                                <QuestionLayout Question="question" />
                                break;
                            case 3:
                                <BiblioLayout Biblio="question" />
                                break;
                        }
                    }


                }
            </div>

        }
        </div>
    </div>
</div>



@code {
    [Parameter]
    public string whatType { get; set; } = "";
    public List<PublicationDto> Publications = new List<PublicationDto>();

    protected override async Task OnInitializedAsync()
    {
        Publications = await PublicationService.GetEntities();
        PublicationService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        PublicationService.OnChange -= StateHasChanged;
    }
}