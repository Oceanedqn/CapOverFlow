@page "/feed"
@inject IPublicationService PublicationService
@inject NavigationManager NavigationManager
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1>Feed</h1>
        </div>
        <div class="col-12" style="height: 80vh; overflow-y: scroll;">

            @if (PublicationService.Entities.Count == 0)
            {
                <p><em>Aucune publication</em></p>
            }
            else
            {
        <div class="row">

            @foreach (var question in PublicationService.Entities)
            {
                <div class="col-sm-6">
                    <div class="card form-rounded mb-3" style="height: 40vh;">
                        <div class="card-header form-rounded" style="background-color:@question.Tag.Ctg.CtgColor;">
                            <div class="row justify-content-between align-items-center">
                                <h5><span class="badge badge-secondary">@question.Tag.TagName</span> @question.PbcTitle </h5>
                                <div class="custom-control custom-switch">
                                    <input type="checkbox" class="custom-control-input" id="customSwitches'+@question.PbcId+'">
                                    @if (question.PbcResolved == true)
                                    {
                                        <input type="checkbox" class="custom-control-input" id="customSwitches'+@question.PbcId+'" checked>
                                    }
                                    <label class="custom-control-label" for="customSwitches'+@question.PbcId+'"></label>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">

                                <div class="col-12" style="max-height: 15vh; overflow-y: scroll;">
                                    <p class="card-text">@question.PbcDescription</p>

                                </div>
                                
                            </div>
                        </div>
                        <div class="card-footer text-muted">
                            <div class="row justify-content-end align-items-center">
                                <div class="mr-3">
                                    @question.PbcDate
                                </div>
                                <div>
                                   
                                    <button class="btn btn-secondary">Voir plus</button>
                                   
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

      }
        </div>
    </div>
</div>



@code {
    public List<PublicationDto> Publications = new List<PublicationDto>();

    protected override async Task OnInitializedAsync()
    {
        Publications = await PublicationService.GetEntities();
        PublicationService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        PublicationService.OnChange -= StateHasChanged;
    }
}